{"version":3,"sources":["components/Header.js","components/Body.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["AppHeader","react_default","a","createElement","className","PreventDefault_Note","e","console","log","charCode","shiftKey","preventDefault","add_note","parent","document","getElementById","notation","value","notes","classList","add","note_container_div","note_li","note","note_text","createTextNode","push","forEach","appendChild","insertBefore","childNodes","innerText","note_container_text","listener","clipboardData","setData","addEventListener","execCommand","removeEventListener","focus","AppBody","id","onKeyPress","AppFooter","href","target","rel","App","Header","Body","Footer","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App"],"mappings":"uNAUeA,MARf,WACI,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,wBCoBV,IAAME,EAAsB,SAACC,GACzBC,QAAQC,IAAI,wBACZD,QAAQC,IAAIF,GACM,KAAfA,EAAEG,UAAoBH,EAAEI,WACvBJ,EAAEK,iBACFC,MAIFA,EAAW,WAGX,IAAIC,EAASC,SAASC,eAAe,oBACjCC,EAAWF,SAASC,eAAe,oBAAoBE,MACvDC,EAAQ,GAGZJ,SAASC,eAAe,oBAAoBE,MAAQ,GAGrBH,SAASX,cAAc,OAC7BgB,UAAUC,IAAI,4BACvC,IAAIC,EAAqBP,SAASX,cAAc,OAC9BW,SAASX,cAAc,MAC7BgB,UAAUC,IAAI,qBAC1B,IAAIE,EAAUR,SAASX,cAAc,MACjCoB,EAAOT,SAASX,cAAc,KAC9BqB,EAAYV,SAASW,eAAeT,GAGxCE,EAAMQ,KAAKH,GAIXL,EAAMS,QAAQ,SAASJ,GAErBA,EAAKK,YAAYJ,GAGjBD,EAAKJ,UAAUC,IAAI,YACnBC,EAAmBF,UAAUC,IAAI,kBAGjCC,EAAmBO,YAAYL,GAG/BD,EAAQM,YAAYP,GAGpBR,EAAOgB,aAAaP,EAAST,EAAOiB,WAAW,IAG/CvB,QAAQC,IAAIa,EAAmBU,aAKjC,IAAMC,EAAsBX,EAAmBU,UAG/C,SAASE,EAAS3B,GAChBA,EAAE4B,cAAcC,QAAQ,aAAcH,GACtC1B,EAAEK,iBAEJG,SAASsB,iBAAiB,OAAQH,GAClCnB,SAASuB,YAAY,QACrBvB,SAASwB,oBAAoB,OAAQL,GAGrCnB,SAASC,eAAe,oBAAoBwB,SAInCC,EA/Ff,WACI,OACIvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACXH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,YAAUC,UAAU,aAAaqC,GAAG,mBAAmBC,WAAYrC,KAEvEJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,MAAIsC,GAAG,0BCJZE,EATG,WAEd,OACI1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,wBAAeF,EAAAC,EAAAC,cAAA,KAAGyC,KAAK,+BAA+BC,OAAO,SAASC,IAAI,uBAA3D,oBCcVC,MAXf,WACE,OACE9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEbH,EAAAC,EAAAC,cAAC6C,EAAD,MACA/C,EAAAC,EAAAC,cAAC8C,EAAD,MACAhD,EAAAC,EAAAC,cAAC+C,EAAD,QCHSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAhD,EAAA,GAAAiD,KAAAD,EAAAE,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCAdW,IAASC,OACP/D,EAAAC,EAAAC,cAACF,EAAAC,EAAM+D,WAAP,KACEhE,EAAAC,EAAAC,cAAC+D,EAAD,OAEFpD,SAASC,eAAe,SAM1BoC","file":"static/js/main.7d9c8970.chunk.js","sourcesContent":["import React from 'react'\n\nfunction AppHeader(){\n    return(\n        <div className=\"AppHeader\">\n          <h1>AutoNote</h1>  \n        </div>\n    )\n}\n\nexport default AppHeader","// import React, {useState} from 'react'\nimport React from 'react'\n\nfunction AppBody(){\n    return(\n        <div className=\"AppBody\">\n            <div className=\"App-Body-Note-TextArea\"> \n                <br></br>\n                <div className=\"note_main_div\">\n                    <label>Note:</label>\n                    <br></br>\n                    <textarea className=\"an_ta_note\" id=\"autonote_ta_note\" onKeyPress={PreventDefault_Note}></textarea>\n                </div>{ \n                <div className=\"note_container_list_main\">\n                <div className=\"note_container_ul\">\n                    <ul id=\"note_list_holder\">\n                    </ul>\n                </div>\n                </div> }\n            </div>\n        </div>\n    )\n}\n\n// function for adding note by pressing enter \nconst PreventDefault_Note = (e) => {\n    console.log('Note Prevent Default')\n    console.log(e)\n    if(e.charCode === 13 && !e.shiftKey) {\n        e.preventDefault()\n        add_note();\n    }\n}\n  \nconst add_note = () => {\n  \n      // create base parent variables\n      var parent = document.getElementById(\"note_list_holder\");\n      var notation = document.getElementById('autonote_ta_note').value;\n      var notes = [];\n  \n      // Clear the textarea \n      document.getElementById('autonote_ta_note').value = \"\"\n  \n      // create elements \n      var note_container_list_main = document.createElement('div');\n      note_container_list_main.classList.add('note_container_list_main');\n      var note_container_div = document.createElement('div');\n      var note_ul_div = document.createElement('ul');\n      note_ul_div.classList.add('note_container_ul');\n      var note_li = document.createElement('li');\n      var note = document.createElement('p');\n      var note_text = document.createTextNode(notation);\n  \n      // push the notation text into an array\n      notes.push(note);\n  \n      // loop over each notation to create a note_container_div\n      // complete with proper formatting and timestamp\n      notes.forEach(function(note){\n\n        note.appendChild(note_text);\n  \n        // adding classes to elements\n        note.classList.add('notation');\n        note_container_div.classList.add('note_container');\n  \n        // appending elements to parent element note_container_div\n        note_container_div.appendChild(note);\n  \n        // appending note_container_div to note_li\n        note_li.appendChild(note_container_div);\n  \n        // inserting note_li into parent list at the top\n        parent.insertBefore(note_li, parent.childNodes[0]);\n  \n        // log the note_container_div text to be copied to ensure proper formatting\n        console.log(note_container_div.innerText);\n  \n     });\n  \n      // create variable that holds the entire note_container_div text\n      const note_container_text = note_container_div.innerText\n      \n      // Copy the div to clipboard\n      function listener(e) {\n        e.clipboardData.setData(\"text/plain\", note_container_text);\n        e.preventDefault();\n      } \n      document.addEventListener(\"copy\", listener);\n      document.execCommand(\"copy\");\n      document.removeEventListener(\"copy\", listener);\n  \n      // focus on who\n      document.getElementById('autonote_ta_note').focus();\n      \n  }\n\nexport default AppBody","import React from 'react'\n\nconst AppFooter = () => {\n  \n    return(\n        <div className=\"AppFooter\">\n          <h3>Created by <a href=\"https://github.com/ironfruit\" target=\"_blank\" rel=\"noopener noreferrer\">@WesleyFranks</a></h3>  \n        </div>\n    )\n}\n\nexport default AppFooter","import React from 'react'\nimport './style/App.css';\n//import MenuBar from './components/MenuBar'\nimport AppHeader from './components/Header';\nimport AppBody from './components/Body'\nimport AppFooter from './components/Footer'\n\n// <MenuBar/>\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <AppHeader/>\n      <AppBody/>\n      <AppFooter/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}